{
  "name": "vscode-less-vue",
  "displayName": "Less IntelliSense + Vue",
  "description": "Advanced autocompletion and refactoring support for Less (even in Vue SFC)",
  "version": "0.7.0",
  "preview": true,
  "publisher": "MaticBabnik",
  "license": "MIT",
  "engines": {
    "vscode": "^1.11.0"
  },
  "icon": "icon.png",
  "homepage": "https://github.com/MaticBabnik/vscode-less/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/MaticBabnik/vscode-less"
  },
  "keywords": [
    "less",
    "autocompletion",
    "intellisense",
    "refactor"
  ],
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:less"
  ],
  "main": "./out/client.js",
  "contributes": {
    "configuration": {
      "properties": {
        "less.scannerDepth": {
          "type": "number",
          "default": 30,
          "description": "The maximum number of nested directories to scan."
        },
        "less.scannerExclude": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/.git",
            "**/node_modules",
            "**/bower_components"
          ],
          "description": "List of Glob-patterns for directories that are excluded when scanning."
        },
        "less.scanImportedFiles": {
          "type": "boolean",
          "default": true,
          "description": "Allows scan imported files."
        },
        "less.scanImportedFilesDepth": {
          "type": "number",
          "default": 50,
          "description": "The maximum number of imported files to scan."
        },
        "less.implicitlyLabel": {
          "type": [
            "string",
            "null"
          ],
          "default": "(implicitly)",
          "description": "The text of a label that the file imported implicitly. If `null` then label not displayed."
        },
        "less.showErrors": {
          "type": "boolean",
          "default": false,
          "description": "Allows to display errors."
        },
        "less.suggestVariables": {
          "type": "boolean",
          "default": true,
          "description": "Allows prompt Variables."
        },
        "less.suggestMixins": {
          "type": "boolean",
          "default": true,
          "description": "Allows prompt Mixins."
        }
      }
    }
  },
  "devDependencies": {
    "@types/micromatch": "^2.3.29",
    "@types/mocha": "^2.2.41",
    "@types/node": "^18.11.18",
    "mocha": "^3.3.0",
    "rimraf": "^2.6.1",
    "typescript": "^4.9.2",
    "vscode": "^1.1.0",
    "eslint": "7.26.0",
		"eslint-config-mrmlnc": "2.0.0"
  },
  "dependencies": {
    "less-symbols-parser": "2.1.1",
    "micromatch": "2.3.11",
    "readdir-enhanced": "1.5.2",
    "vscode-css-languageservice": "2.0.3",
    "vscode-languageclient": "3.2.2",
    "vscode-languageserver": "3.2.2",
    "vscode-uri": "1.0.0"
  },
  "scripts": {
    "postinstall": "node ./node_modules/vscode/bin/install",
    "clean": "rimraf out",
    "lint": "true",
    "compile": "tsc",
    "test": "mocha out/**/*.spec.js",
    "build": "npm run clean && npm run lint && npm run compile && npm test",
    "watch": "npm run clean && npm run lint && npm run compile -- --watch"
  }
}
